<?xml version="1.0" encoding="UTF-8"?>
<!--
The MIT License

Copyright (c) 2004-2011, Sun Microsystems, Inc., Kohsuke Kawaguchi,
Daniel Dyer, Erik Ramfelt, Stephen Connolly, Tom Huybrechts, Olivier Lamy

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.jenkins-ci.plugins</groupId>
    <artifactId>plugin</artifactId>
    <version>4.74</version>
    <relativePath />
  </parent>

  <groupId>org.jenkins-ci.main</groupId><!-- for historical reason, this plugin has a different groupId -->
  <artifactId>maven-plugin</artifactId><!-- for the same reason, artifactId is against the convention -->
  <version>${revision}${changelist}</version>
  <packaging>hpi</packaging>

  <name>Maven Integration plugin</name>
  <url>https://github.com/jenkinsci/${project.artifactId}</url>

  <properties>
    <revision>3.24</revision>
    <changelist>-SNAPSHOT</changelist>
    <gitHubRepo>jenkinsci/${project.artifactId}</gitHubRepo>
    <jenkins.version>2.387.3</jenkins.version>
    <mavenInterceptorsVersion>1.14</mavenInterceptorsVersion>
    <!--
      Minimal supported version of Maven.
      It declares version of the core, which should be included into the the server-side.
      Note that the plugin still bundles agent support for Maven 3.0.5, probably it's not really operational
    -->
    <mavenMinimalVersion>3.8.3</mavenMinimalVersion>
    <resolverVersion>1.7.3</resolverVersion>
    <sisuInjectVersion>0.3.5</sisuInjectVersion>
    <wagonVersion>3.5.3</wagonVersion>
    <!-- TODO fix existing violatiosn -->
    <spotbugs.threshold>High</spotbugs.threshold>
  </properties>

  <issueManagement>
    <system>jira</system>
    <url>https://issues.jenkins.io/browse/JENKINS/component/15487</url>
  </issueManagement>
  <licenses>
    <license>
      <name>MIT License</name>
      <url>https://opensource.org/licenses/MIT</url>
    </license>
  </licenses>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.jenkins.tools.bom</groupId>
        <artifactId>bom-2.387.x</artifactId>
        <version>2543.vfb_1a_5fb_9496d</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>javax.annotation</groupId>
        <artifactId>javax.annotation-api</artifactId>
        <version>1.3.2</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>javadoc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>mailer</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>junit</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jenkins-ci.main.maven</groupId>
      <artifactId>maven-agent</artifactId>
      <version>${mavenInterceptorsVersion}</version>
      <exclusions>
        <exclusion>
          <groupId>classworlds</groupId>
          <artifactId>classworlds</artifactId>
        </exclusion>
        <exclusion>
          <!-- Embedded in Maven, Provided by Maven Embedder Library on the Jenkins side -->
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-embedder</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.ant</groupId>
          <artifactId>ant</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.jenkins-ci.main.maven</groupId>
      <artifactId>maven-interceptor</artifactId>
      <version>${mavenInterceptorsVersion}</version>
      <exclusions>
        <exclusion>
          <groupId>classworlds</groupId>
          <artifactId>classworlds</artifactId>
        </exclusion>
        <exclusion>
          <!-- Embedded in Maven, Provided by Maven Embedder Library on the Jenkins side -->
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-embedder</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.jvnet.hudson</groupId>
      <artifactId>maven2.1-interceptor</artifactId>
      <version>1.2</version>
    </dependency>

    <dependency>
      <groupId>org.jenkins-ci.main.maven</groupId>
      <artifactId>maven3-agent</artifactId>
      <version>${mavenInterceptorsVersion}</version>
      <exclusions>
        <exclusion>
          <groupId>org.sonatype.sisu</groupId>
          <artifactId>sisu-inject-plexus</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.sonatype.sisu</groupId>
          <artifactId>sisu-inject-bean</artifactId>
        </exclusion>
        <!-- Embedded in Maven, Provided by Maven Embedder Library or Maven Plugin on the Jenkins side -->
        <exclusion>
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-embedder</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.main.maven</groupId>
      <artifactId>maven31-agent</artifactId>
      <version>${mavenInterceptorsVersion}</version>
      <exclusions>
        <!-- Embedded in Maven, Provided by Maven Embedder Library or Maven Plugin on the Jenkins side -->
        <exclusion>
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-embedder</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.eclipse.sisu</groupId>
          <artifactId>org.eclipse.sisu.plexus</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.main.maven</groupId>
      <artifactId>maven32-agent</artifactId>
      <version>${mavenInterceptorsVersion}</version>
      <exclusions>
        <!-- Embedded in Maven, Provided by Maven Embedder Library or Maven Plugin on the Jenkins side -->
        <exclusion>
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-embedder</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.main.maven</groupId>
      <artifactId>maven33-agent</artifactId>
      <version>${mavenInterceptorsVersion}</version>
      <exclusions>
        <!-- Embedded in Maven, Provided by Maven Embedder Library or Maven Plugin on the Jenkins side -->
        <exclusion>
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-embedder</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.main.maven</groupId>
      <artifactId>maven35-agent</artifactId>
      <version>${mavenInterceptorsVersion}</version>
      <exclusions>
        <exclusion>
          <!--Jenkins bundles Guava 11.0.1, this library requires 20.0 and makes the plugin to bundle it.
              The interceptor should not be actually used inside Jenkins, what could possibly go wrong?
          -->
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
        </exclusion>
        <!-- Embedded in Maven, Provided by Maven Embedder Library or Maven Plugin on the Jenkins side -->
        <exclusion>
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-embedder</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.codehaus.plexus</groupId>
          <artifactId>plexus-interpolation</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.jenkins-ci.main.maven</groupId>
      <artifactId>maven3-interceptor</artifactId>
      <version>${mavenInterceptorsVersion}</version>
      <exclusions>
        <exclusion>
          <groupId>org.sonatype.sisu</groupId>
          <artifactId>sisu-inject-plexus</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.sonatype.sisu</groupId>
          <artifactId>sisu-inject-bean</artifactId>
        </exclusion>
        <!-- Embedded in Maven, Provided by Maven Embedder Library or Maven Plugin on the Jenkins side -->
        <exclusion>
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-embedder</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-core</artifactId>
        </exclusion>
        <exclusion>
          <!-- Interceptor gets it from the Maven Core on the remote side -->
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-aether-provider</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.main.maven</groupId>
      <artifactId>maven31-interceptor</artifactId>
      <version>${mavenInterceptorsVersion}</version>
      <exclusions>
        <!-- Embedded in Maven, Provided by Maven Embedder Library or Maven Plugin on the Jenkins side -->
        <exclusion>
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-embedder</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-core</artifactId>
        </exclusion>
        <exclusion>
          <!-- Interceptor gets it from the Maven Core on the remote side -->
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-aether-provider</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.main.maven</groupId>
      <artifactId>maven32-interceptor</artifactId>
      <version>${mavenInterceptorsVersion}</version>
      <exclusions>
        <!-- Embedded in Maven, Provided by Maven Embedder Library or Maven Plugin on the Jenkins side -->
        <exclusion>
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-embedder</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-core</artifactId>
        </exclusion>
        <exclusion>
          <!-- Interceptor gets it from the Maven Core on the remote side -->
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-aether-provider</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.main.maven</groupId>
      <artifactId>maven33-interceptor</artifactId>
      <version>${mavenInterceptorsVersion}</version>
      <exclusions>
        <!-- Embedded in Maven, Provided by Maven Embedder Library or Maven Plugin on the Jenkins side -->
        <exclusion>
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-embedder</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-core</artifactId>
        </exclusion>
        <exclusion>
          <!-- Interceptor gets it from the Maven Core on the remote side -->
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-aether-provider</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.main.maven</groupId>
      <artifactId>maven35-interceptor</artifactId>
      <version>${mavenInterceptorsVersion}</version>
      <exclusions>
        <!-- Embedded in Maven, Provided by Maven Embedder Library or Maven Plugin on the Jenkins side -->
        <exclusion>
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-embedder</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.main.maven</groupId>
      <artifactId>maven3-interceptor-commons</artifactId>
      <version>${mavenInterceptorsVersion}</version>
      <exclusions>
        <!-- Embedded in Maven, Provided by Maven Embedder Library or Maven Plugin on the Jenkins side -->
        <exclusion>
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-embedder</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-core</artifactId>
        </exclusion>
        <exclusion>
          <!-- Interceptor gets it from the Maven Core on the remote side -->
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-aether-provider</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <version>${mavenMinimalVersion}</version>
      <exclusions>
        <exclusion>
          <groupId>com.google.inject</groupId>
          <artifactId>guice</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.eclipse.sisu</groupId>
          <artifactId>org.eclipse.sisu.inject</artifactId>
        </exclusion>
        <!-- commons-lang3 is provided by commons-lang3-api plugin -->
        <exclusion>
          <groupId>org.apache.commons</groupId>
          <artifactId>commons-lang3</artifactId>
        </exclusion>
        <!-- Provided by Jenkins core -->
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-compat</artifactId>
      <version>${mavenMinimalVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-repository-metadata</artifactId>
      <version>${mavenMinimalVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-resolver-provider</artifactId>
      <version>${mavenMinimalVersion}</version>
    </dependency>
    <dependency>
      <!--
      Maven embedder version has to comply with the minimally supported version of Maven,
      because it needs to be present on both agent and Maven side
      -->
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-embedder</artifactId>
      <version>${mavenMinimalVersion}</version>
      <exclusions>
        <exclusion>
          <groupId>com.google.inject</groupId>
          <artifactId>guice</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.sonatype.plexus</groupId>
          <artifactId>plexus-cipher</artifactId>
        </exclusion>
        <!-- commons-lang3 is provided by commons-lang3-api plugin -->
        <exclusion>
          <groupId>org.apache.commons</groupId>
          <artifactId>commons-lang3</artifactId>
        </exclusion>
        <!-- Provided by Jenkins core -->
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-cipher</artifactId>
      <version>2.0</version>
      <exclusions>
        <exclusion>
          <groupId>org.eclipse.sisu</groupId>
          <artifactId>org.eclipse.sisu.inject</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.apache.maven.resolver</groupId>
      <artifactId>maven-resolver-api</artifactId>
      <version>${resolverVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.resolver</groupId>
      <artifactId>maven-resolver-impl</artifactId>
      <version>${resolverVersion}</version>
      <exclusions>
        <!-- commons-lang3 is provided by commons-lang3-api plugin -->
        <exclusion>
          <groupId>org.apache.commons</groupId>
          <artifactId>commons-lang3</artifactId>
        </exclusion>
        <!-- Provided by Jenkins core -->
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.resolver</groupId>
      <artifactId>maven-resolver-spi</artifactId>
      <version>${resolverVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.resolver</groupId>
      <artifactId>maven-resolver-util</artifactId>
      <version>${resolverVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.resolver</groupId>
      <artifactId>maven-resolver-transport-wagon</artifactId>
      <version>${resolverVersion}</version>
      <exclusions>
        <!-- Provided by Jenkins core -->
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.resolver</groupId>
      <artifactId>maven-resolver-connector-basic</artifactId>
      <version>${resolverVersion}</version>
      <exclusions>
        <!-- Provided by Jenkins core -->
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.plexus</artifactId>
      <version>${sisuInjectVersion}</version>
    </dependency>

    <!--
    <dependency>
      <groupId>org.sonatype.sisu</groupId>
      <artifactId>sisu-inject-plexus</artifactId>
      <version>2.4.1</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu</groupId>
      <artifactId>sisu-inject-bean</artifactId>
      <version>2.4.1</version>
    </dependency>
    -->

    <!-- JENKINS-10819 : This wagon is safer and more configurable to provide http(s) support -->
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-http</artifactId>
      <version>${wagonVersion}</version>
      <exclusions>
        <!-- Provided by Jenkins core -->
        <exclusion>
          <groupId>commons-io</groupId>
          <artifactId>commons-io</artifactId>
        </exclusion>
        <!-- Provided by apache-httpcomponents-client-4-api plugin -->
        <exclusion>
          <groupId>org.apache.httpcomponents</groupId>
          <artifactId>httpcore</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.httpcomponents</groupId>
          <artifactId>httpclient</artifactId>
        </exclusion>
        <!-- Provided by Jenkins core -->
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>jcl-over-slf4j</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.jsoup</groupId>
      <artifactId>jsoup</artifactId>
      <version>1.15.3</version>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>apache-httpcomponents-client-4-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>jsch</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-file</artifactId>
      <version>${wagonVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-ftp</artifactId>
      <version>${wagonVersion}</version>
      <exclusions>
        <!-- Provided by Jenkins core -->
        <exclusion>
          <groupId>commons-io</groupId>
          <artifactId>commons-io</artifactId>
        </exclusion>
        <!-- Provided by Jenkins core -->
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-ssh</artifactId>
      <version>${wagonVersion}</version>
      <exclusions>
        <exclusion>
          <!-- Comes from the jsch plugin -->
          <groupId>com.jcraft</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-ssh-external</artifactId>
      <version>${wagonVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-provider-api</artifactId>
      <version>${wagonVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.reporting</groupId>
      <artifactId>maven-reporting-api</artifactId>
      <version>3.1.1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-classworlds</artifactId>
      <version>2.6.0</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <version>3.4.1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-component-annotations</artifactId>
      <version>2.1.1</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.lib</groupId>
      <artifactId>lib-jenkins-maven-artifact-manager</artifactId>
      <version>1.2</version>
    </dependency>
    <dependency>
      <!-- TODO: fix exclusion once updated to the 3.5.0 baseline -->
      <groupId>org.jenkins-ci.lib</groupId>
      <artifactId>lib-jenkins-maven-embedder</artifactId>
      <version>3.15</version>
      <exclusions>
        <exclusion>
          <groupId>commons-cli</groupId>
          <artifactId>commons-cli</artifactId>
        </exclusion>
        <exclusion>
          <!-- Provided by Jenkins core -->
          <groupId>commons-io</groupId>
          <artifactId>commons-io</artifactId>
        </exclusion>
        <exclusion>
          <groupId>xml-apis</groupId>
          <artifactId>xml-apis</artifactId>
        </exclusion>
        <exclusion>
          <!-- we bundle our own version below -->
          <groupId>org.apache.maven.wagon</groupId>
          <artifactId>wagon-webdav</artifactId>
        </exclusion>
        <exclusion>
          <!--
            Excluded to solve the upper bounds conflict with the core.
            Jenkins core bundles 1.8.4 while the Embedder Lib requires Ant 1.9.2
            The required version is available in Maven Runtime, but there is no sense to ship custom version within the plugin
          -->
          <groupId>org.apache.ant</groupId>
          <artifactId>ant</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.github.spotbugs</groupId>
          <artifactId>spotbugs-annotations</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- JENKINS-10076 : This wagon is better to provide webdav support -->
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-webdav-jackrabbit</artifactId>
      <version>${wagonVersion}</version>
      <exclusions>
        <!-- Provided by Jenkins core -->
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>jcl-over-slf4j</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
        <!-- SECURITY-61: unused -->
        <exclusion>
          <groupId>nekohtml</groupId>
          <artifactId>nekohtml</artifactId>
        </exclusion>
        <exclusion>
          <groupId>nekohtml</groupId>
          <artifactId>xercesMinimal</artifactId>
        </exclusion>
        <!-- Provided by Jenkins core -->
        <exclusion>
          <groupId>commons-io</groupId>
          <artifactId>commons-io</artifactId>
        </exclusion>
        <exclusion>
          <!-- Core offers commons-codec:commons-codec:1.8, 1.10 will be available on the Maven side anyway -->
          <groupId>commons-codec</groupId>
          <artifactId>commons-codec</artifactId>
        </exclusion>
        <exclusion>
          <!-- Offered by HttpComponents Client 4.x API plugin and by Maven on the remote side -->
          <groupId>org.apache.httpcomponents</groupId>
          <artifactId>httpcore</artifactId>
        </exclusion>
        <exclusion>
          <!-- Offered by HttpComponents Client 4.x API plugin and by Maven on the remote side -->
          <groupId>org.apache.httpcomponents</groupId>
          <artifactId>httpclient</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.jenkins.plugins</groupId>
      <artifactId>commons-lang3-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>token-macro</artifactId>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.jenkins-ci.main</groupId>
      <artifactId>jenkins-test-harness-tools</artifactId>
      <version>2.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jvnet.mock-javamail</groupId>
      <artifactId>mock-javamail</artifactId>
      <version>2.1</version>
      <scope>test</scope>
      <exclusions>
        <!-- Provided by jakarta-activation-api plugin -->
        <exclusion>
          <groupId>com.sun.activation</groupId>
          <artifactId>jakarta.activation</artifactId>
        </exclusion>
        <!-- Provided by jakarta-mail-api plugin -->
        <exclusion>
          <groupId>com.sun.mail</groupId>
          <artifactId>jakarta.mail</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.jenkins.plugins</groupId>
      <artifactId>jakarta-mail-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.test</groupId>
      <artifactId>sample-plexus-component</artifactId>
      <version>1.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>promoted-builds</artifactId>
      <version>892.vd6219fc0a_efb</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.main</groupId>
      <artifactId>jenkins-test-harness</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>credentials</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>plain-credentials</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>credentials-binding</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.jenkins.configuration-as-code</groupId>
      <artifactId>test-harness</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <systemPropertyVariables>
              <buildDirectory>${project.build.directory}</buildDirectory>
            </systemPropertyVariables>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-mvn-home-for-test</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.apache.maven</groupId>
                  <artifactId>apache-maven</artifactId>
                  <version>3.6.3</version>
                  <type>zip</type>
                  <classifier>bin</classifier>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>enforce</goal>
            </goals>
            <phase>validate</phase>
            <id>ensure-no-duplicated-classes</id>
            <configuration>
              <rules>
                <bannedDependencies>
                  <excludes>
                    <exclude>org.codehaus.plexus:plexus-container-default</exclude>
                    <exclude>org.codehaus.plexus:plexus-component-api</exclude>
                    <!-- In conflict with org.eclipse.sisu:org.eclipse.sisu.plexus -->
                    <exclude>org.sonatype.plexus:plexus-cipher</exclude>
                  </excludes>
                  <message>
                    doesn't work anymore with maven 3 librairies. you have to add some exclusions.
                  </message>
                </bannedDependencies>
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>
          <execution>
            <id>ban-commons-httpclient-3x</id>
            <phase>process-sources</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <restrictImports>
                  <basePackage>**</basePackage>
                  <includeTestCode>true</includeTestCode>
                  <bannedImports>
                    <bannedImport>org.apache.commons.httpclient.**</bannedImport>
                  </bannedImports>
                </restrictImports>
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>
          <execution>
            <id>enforce-banned-dependencies</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <bannedDependencies>
                  <excludes>
                    <exclude>org.apache.commons:commons-lang3</exclude>
                  </excludes>
                  <searchTransitive>false</searchTransitive>
                </bannedDependencies>
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>
        </executions>

        <!-- Consider adding to Jenkins plugin parent POM? -->
        <dependencies>
          <dependency>
            <groupId>de.skuzzle.enforcer</groupId>
            <artifactId>restrict-imports-enforcer-rule</artifactId>
            <version>1.4.0</version>
          </dependency>
        </dependencies>
      </plugin>

    </plugins>
  </build>


  <repositories>
    <repository>
      <id>repo.jenkins-ci.org</id>
      <url>https://repo.jenkins-ci.org/public/</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>repo.jenkins-ci.org</id>
      <url>https://repo.jenkins-ci.org/public/</url>
    </pluginRepository>
  </pluginRepositories>

  <scm>
    <connection>scm:git:https://github.com/${gitHubRepo}</connection>
    <developerConnection>scm:git:https://github.com/${gitHubRepo}</developerConnection>
    <url>https://github.com/${gitHubRepo}</url>
    <tag>${scmTag}</tag>
  </scm>

</project>
