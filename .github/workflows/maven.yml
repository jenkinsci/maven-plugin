# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: GitHub CI

on: [push, pull_request]

jobs:
  build:

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        java: [8, 11]
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up cache for ~./m2/repository
        uses: actions/cache@v2.1.4
        with:
          path: ~/.m2/repository
          key: maven-${{ matrix.os }}-java${{ matrix.java }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ matrix.os }}-java${{ matrix.java }}-
            maven-${{ matrix.os }}-

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java }}

      - name: Build with Maven
        run: mvn verify -e -B -V javadoc:javadoc

  pct:
    runs-on: ubuntu-latest
    container:
      image: jenkins/pct
      env:
        CHECKOUT_SRC: "https://github.com/${{ github.repository }}.git"
        VERSION: "${{ github.ref }}"
      volumes:
        - /home/runner/work/__w/out:/pct/out
    steps:
      # gets the Jenkins version from master's branch pom.xml to test against
      - name: Fetch Jenkins version
        run: |
          echo "JENKINS_VERSION=$(curl -s https://raw.githubusercontent.com/${{ github.repository }}/master/pom.xml | awk -F '[<>]' '/jenkins.version/{print $3}')" >> $GITHUB_ENV
      - run: run-pct
      - uses: actions/upload-artifact@v2
        with:
          name: pct-report
          path: /home/runner/work/__w/out/pct-report.html
          if-no-files-found: error
